{"ast":null,"code":"var _jsxFileName = \"/Users/dharmaseervi/Desktop/dharmaseervi/src/components/ScheduleBooking.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScheduleBooking = () => {\n  _s();\n  const [monthData, setMonthData] = useState([]);\n  useEffect(() => {\n    // Get the current date\n    const currentDate = new Date();\n\n    // Calculate the date of 1 month later\n    const oneMonthLaterDate = new Date(currentDate);\n    oneMonthLaterDate.setMonth(oneMonthLaterDate.getMonth() + 1);\n    const data = [];\n    let currentDateIterator = new Date(currentDate);\n    while (currentDateIterator <= oneMonthLaterDate) {\n      data.push({\n        date: new Date(currentDateIterator)\n      });\n      currentDateIterator.setDate(currentDateIterator.getDate() + 1);\n    }\n    setMonthData(data);\n  }, []);\n  const [displayedData, setDisplayedData] = useState([]);\n  const [startIndex, setStartIndex] = useState(0);\n  useEffect(() => {\n    const data = monthData;\n    setDisplayedData(data.slice(startIndex, startIndex + 3));\n  }, [startIndex]);\n  const handleNextClick = () => {\n    if (startIndex + 3 < monthData.length) {\n      setStartIndex(startIndex + 3);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center flex-column mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex  \",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Appointment Booking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: 'none'\n        },\n        className: \"d-flex justify-content-center flex-column flex-wrap \",\n        children: displayedData.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"d-flex border border-primary p-2 m-2 gap-5\",\n          children: item.date.toLocaleDateString()\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), startIndex + 3 < monthData.length && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNextClick,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(ScheduleBooking, \"7xuOvS+7/B0nZUVevV29eW+kODY=\");\n_c = ScheduleBooking;\nexport default ScheduleBooking;\nvar _c;\n$RefreshReg$(_c, \"ScheduleBooking\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ScheduleBooking","_s","monthData","setMonthData","currentDate","Date","oneMonthLaterDate","setMonth","getMonth","data","currentDateIterator","push","date","setDate","getDate","displayedData","setDisplayedData","startIndex","setStartIndex","slice","handleNextClick","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","listStyle","map","item","index","toLocaleDateString","onClick","_c","$RefreshReg$"],"sources":["/Users/dharmaseervi/Desktop/dharmaseervi/src/components/ScheduleBooking.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst ScheduleBooking = () => {\n    const [monthData, setMonthData] = useState([]);\n\n    useEffect(() => {\n        // Get the current date\n        const currentDate = new Date();\n\n        // Calculate the date of 1 month later\n        const oneMonthLaterDate = new Date(currentDate);\n\n        oneMonthLaterDate.setMonth(oneMonthLaterDate.getMonth() + 1);\n\n        const data = [];\n        let currentDateIterator = new Date(currentDate);\n\n        while (currentDateIterator <= oneMonthLaterDate) {\n            data.push({\n                date: new Date(currentDateIterator),\n            });\n            currentDateIterator.setDate(currentDateIterator.getDate() + 1);\n        }\n        setMonthData(data);\n    }, []);\n\n\n\n    const [displayedData, setDisplayedData] = useState([]);\n    const [startIndex, setStartIndex] = useState(0);\n    useEffect(() => {\n        const data = monthData;\n        setDisplayedData(data.slice(startIndex, startIndex + 3));\n    }, [startIndex])\n\n    const handleNextClick = () => {\n        if (startIndex + 3 < monthData.length) {\n            setStartIndex(startIndex + 3);\n        }\n    };\n\n    return (\n        <div className='d-flex justify-content-center flex-column mt-5'>\n            <div className='d-flex  '>\n                <h1>Appointment Booking</h1>\n            </div>\n            <div className='d-flex'>\n                <ul style={{ listStyle: 'none' }} className='d-flex justify-content-center flex-column flex-wrap '>\n                    {displayedData.map((item, index) => (\n                        <li key={index} className='d-flex border border-primary p-2 m-2 gap-5'>\n                            {item.date.toLocaleDateString()}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n            {startIndex + 3 < monthData.length && (\n                <button onClick={handleNextClick}>Next</button>\n            )}\n        </div>\n    )\n}\n\nexport default ScheduleBooking\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}